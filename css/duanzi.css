*{
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

.videoList{
	width:3.7rem;
	
}

.videoItem{
	 width: 3.75rem;
	 /* height: vw; */
/* 	 margin-top: 0.5rem;
 */}

.videoItem .img{
	width: 100vw;
	height: 75vw;
	background-size: auto 100%; 
	background-repeat: no-repeat;
	background-position: center;
	background-color: black;
}


.videoItem .videoTop{
	width: 100vw;
	height: 75vw;
	position: relative;
}

.videoItem .videoTop h3{
	position: absolute;
	left: 0;
	top: 0;
	width: 100vw;
	font-size: 0.16rem;
	color: #fff;
	padding: 0.1rem;
}

.videoItem .videoTop button{
	width: 100vw;
	height: 75vw;
	position: absolute;
	left:0;
	top:0;
	background-color:rgba(0,0,0,0.4);
	background-image: url(../img/play.png);
	background-repeat: no-repeat;
	background-position: center;
	background-size: 20%;
}

.videoItem .videoTop p{
	position: absolute;
	left: 0;
	bottom: 0;
	width: 100vw;
	font-size: 0.15rem;
	color: white;
	height: 0.3rem;
	display: flex;
	align-items: center;
	justify-content: flex-end;
	padding:0 0.15rem;
	line-height: 0.3rem;
}

.videoItem .videoTop p .icon{
	width: 0.15rem;
	height: 0.15rem;
	display: inline-block;
	background-image: url(../img/eye.png);
	background-repeat: no-repeat;
	background-position: center;
	background-size: 100%;

}

.videoItem .videoBottom{
	display: flex;
	width: 100vw;
	height: 0.5rem;
	align-items: center;
	padding:0 0.18rem;
}

.videoItem .videoBottom img{
	width: 0.3rem;
	height: 0.3rem;
	border-radius: 0.15rem;
}

.videoItem .videoBottom .right{
	height: 0.5rem;
	flex: 1;
	padding-left: 0.15rem;
	padding-top: 0.1rem;
	flex-direction: column;
	justify-content: center;
	
}
.videoItem .videoBottom .right .author{
	font-size: 0.1rem;
}

.videoItem .videoBottom .right .comment{
	font-size: 0.1rem;
	color: #999;
}

.xximg{
	width: 100vw;
	height: 500px;
}

.playPage{
	width: 100vw;
	height: 100vh;
	background-color: rgba(0,0,0,0.7);
	position: fixed;
	display: none;
	left: 0;
	top: 0;
}

.playPage video{
	width: 100vw;
	height: 100vh;
	
}


 .close{
	width: 0.25rem;
	height: 0.25rem;
	position: absolute;
	right: 0.25rem;
	top: 0.25rem;
	background-image: url(../img/close.png);
	background-repeat: no-repeat;
	background-position: center;
	background-size: 100%;
	border-color: rgba(0,0,0,0.7);
	border-radius: 0.25rem;
}

.download{
	width: 100vw;
	height: 0.3rem;
	line-height: 0.3rem;
	font-size: 0.15rem;
	text-align: center;
	color: #999999;
	background-color: #efefef;
}

/* 
 1、static（静态定位）：默认值。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right 或者 z-index 声明）。
 
 2、relative（相对定位）：生成相对定位的元素，通过top,bottom,left,right的设置相对于其正常（原先本身）位置进行定位。可通过z-index进行层次分级。　　
 
 3、absolute（绝对定位）：生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。可通过z-index进行层次分级。
 
 4、fixed（固定定位）：生成绝对定位的元素，相对于浏览器窗口进行定位。元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。可通过z-index进行层次分级*/